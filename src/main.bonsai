<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.8.5"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:p1="clr-namespace:AindPhysiologyFip.Session;assembly=Extensions"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:p2="clr-namespace:AindPhysiologyFip.TaskLogic;assembly=Extensions"
                 xmlns:p3="clr-namespace:AindPhysiologyFip.Rig;assembly=Extensions"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:p4="clr-namespace:;assembly=Extensions"
                 xmlns:spk="clr-namespace:Bonsai.Spinnaker;assembly=Bonsai.Spinnaker"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="TaskLogicPath" />
        <Property Name="RigPath" />
        <Property Name="SessionPath" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:ReadSchemas.bonsai">
        <TaskLogicPath />
        <RigPath />
        <SessionPath />
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>DeserializeSchemas</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>RawSessionSchema</Name>
            </Expression>
            <Expression xsi:type="p1:DeserializeFromJson">
              <p1:Type xsi:type="TypeMapping" TypeArguments="p1:AindBehaviorSessionModel" />
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>SessionSchema</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>RawTaskLogicSchema</Name>
            </Expression>
            <Expression xsi:type="p2:DeserializeFromJson">
              <p2:Type xsi:type="TypeMapping" TypeArguments="p2:AindPhysioFipTaskLogic" />
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>TaskLogicSchema</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>RawRigSchema</Name>
            </Expression>
            <Expression xsi:type="p3:DeserializeFromJson">
              <p3:Type xsi:type="TypeMapping" TypeArguments="p3:AindPhysioFipRig" />
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>RigSchema</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Hardware</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="GroupWorkflow">
              <Name>Cameras</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:Boolean">
                    <rx:Name>_TriggeredCamerasInitialized</rx:Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="BooleanProperty">
                      <Value>true</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>_TriggeredCamerasInitialized</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>CameraRed</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Gain" Selector="Gain" />
                      <Property Name="Offset" Selector="Offset.X,Offset.Y" />
                      <Property Name="SerialNumber" Selector="SerialNumber" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p4:FipSpinnakerCapture">
                      <spk:Index xsi:nil="true" />
                      <spk:ColorProcessing>Default</spk:ColorProcessing>
                      <p4:Gain>0</p4:Gain>
                      <p4:Offset>
                        <p4:X>0</p4:X>
                        <p4:Y>0</p4:Y>
                      </p4:Offset>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p3:FipCamera">
                      <p3:DeviceType>FipCamera</p3:DeviceType>
                      <p3:Gain>0</p3:Gain>
                    </Combinator>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="7" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source2" />
                  <Edge From="7" To="8" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
          </Nodes>
          <Edges />
        </Workflow>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>